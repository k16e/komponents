---
import Heading from '../atoms/Heading.astro'
import Copy from '../atoms/Copy.astro'
import Icon from '../atoms/Icon.astro'
import { _empty } from '../scripts/snips'
import Anchor from '../atoms/Anchor.astro'
import Button from '../atoms/Button.astro'

const {
    subtitle, title, showSubtitle = true, showTitle = true, showSlat = true, showCopy = true, copy, color = 'surface', slatColor = 'punch', hLevel = 3, centered, links, link,
    class: classes, ...attrs
} = Astro.props
---
<div
    class:list={[
        'space-y-8 lg:space-y-10',
        centered && 'text-center',
        classes
    ]} {...attrs}>
	<div
        class:list={[
            'flex flex-col gap-y-6'
        ]}>
        {
            showSubtitle && (
                <Heading text={ subtitle } size="sm" weight="semi" color={ color } uppercase loosen class="opacity-60"/>
            )
        }
        {
            showTitle && (
                <div
                    class:list={[
                        'flex',
                        centered ? 'flex-col items-center gap-y-6' : 'space-x-4 items-end'
                    ]}>
                    { showSlat &&
                        <Icon
                            name={ centered ? 'centerbar' : 'leadingbar' }
                            class:list={[
                                hLevel === 3 && 'w-[32px] h-[6px] lg:w-[48px] lg:h-[7px]',
                                hLevel === 4 && 'w-[36px] h-[7px] md:w-[64px] md:h-[9px] lg:w-[64px] lg:h-[11px]',
                                slatColor === 'punch' && 'text-punch-600',
                                slatColor === 'surface' && 'text-surface-950',
                                slatColor === 'white' && 'text-white',
                                centered && 'order-2'
                            ]}
                        />
                    }
                    { hLevel === 3 && <Heading text={ title } level="h3" size="3xl" weight="extra" tighten color={ color }/> }
                    { hLevel === 4 && <Heading text={ title } level="h2" size="4xl" weight="extra" tighten color={ color }/> }
                </div>
            )
        }
    </div>
    <div class:list={[ centered && 'text-center', 'space-y-8 md:space-y-12' ]}>
        { showCopy && (
            <Copy content={ copy } color={ color } Tag="p"/>
        ) }
        { !_empty(links) && (
            <ul class:list={[
                    'flex flex-col sm:flex-row space-y-3 sm:space-y-0 sm:space-x-3',
                    centered && 'justify-center'
                ]}>
                { links.map((link: any) => (
                    <li class="group flex justify-center">
                        <Anchor
                            href={ `/${link.link.story.full_slug === 'home' ? '' : link.link.story.full_slug}` }
                            hover="shadow">
                            <Button
                                icon={ link.icon }
                                label={ link.title }
                                iconPosition={ link.icon_position }
                                color={ link.color }
                            />
                        </Anchor>
                    </li>
                )) }
            </ul>
        ) }
        { link && (
            <Anchor href={ `/${link}` } hover="shadow">
                <Button
                    icon="arrow-right"
                    label="View Project"
                    color="light_p"
                />
            </Anchor>
        ) }
    </div>
</div>