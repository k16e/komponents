---
import Wrapper from './Wrapper.astro'
import Icon from '../atoms/Icon.astro'
import ContactActions from '../blocks/ContactActions.astro'
import NavDesktop from '../blocks/NavDesktop.astro'
import { _transition } from '../scripts/snips'
import TitleHidden from '../blocks/TitleHidden.astro'

const
    {
        title, contactActions, nav, class: classes, ...attrs
    } = Astro.props
---
<header
    class:list={[
        'z-50 fixed top-0 inset-x-0 py-2 bg-white',
        _transition(),
        classes
    ]}
    data-main-header
    { ...attrs }>
    <Wrapper class:list="flex items-center justify-between h-full !pr-0 lg:!pr-4">
        <div class="flex items-center space-x-10">
            <a href="/" class="flex">
                <Icon name="icon" class="w-9 lg:hidden text-accent-600"/>
                <Icon name="logo" class="h-10 hidden lg:block"/>
                <span class='sr-only'>Komponents</span>
            </a>
            <nav>
                <TitleHidden tag="h2" title="Navigation for Desktop"/>
                <NavDesktop links={ nav }/>
            </nav>
        </div>
        <div class="flex">
            <ContactActions links={ contactActions }/>
            <button
                class:list={[
                    'xl:hidden px-4 bg-surface-100 hover:bg-surface-200 text-accent-600',
                    _transition()
                ]} data-sheet-trigger="nav-mobile">
                <Icon name="menu" class="w-7 pointer-events-none"/>
            </button>
        </div>
    </Wrapper>
</header>

<script>
    import { _q } from '../scripts/snips'
    import _scroll from '../scripts/scroll'
    import _runSheet from '../scripts/sheet'

    const _sheet = _runSheet()

    const
        header = _q('header'),
        height = header.getBoundingClientRect().height,
        activeClasses = ['shadow', 'backdrop-filter', 'backdrop-blur-lg', 'bg-opacity-90'],
        activate = () => header.classList.add(...activeClasses),
        deactivate = () => header.classList.remove(...activeClasses),
        toggle = () => (window.scrollY > height) ? activate() : deactivate(),
        sheetTrigger = _q('[data-sheet-trigger]'),
        openSheet = (e: any) => {
            _sheet.display(e)
        }

    window.scrollY !== 0 ? activate() : deactivate()
    _scroll(toggle)

    sheetTrigger.addEventListener('click', openSheet)
</script>