---
import '@fontsource-variable/plus-jakarta-sans'
import '@fontsource-variable/kumbh-sans'
import Head from './Head.astro'
import Header from './Header.astro'
import Footer from './Footer.astro'
import { useStoryblokApi } from '@storyblok/astro'
import TitleHidden from '../atoms/TitleHidden.astro'

const
    {
        pageTitle, pageDescription, pageThumbnail
    } = Astro.props,
    storyblokApi = useStoryblokApi(),
    { data: settings } = await storyblokApi.get('cdn/stories/settings', {
        version: import.meta.env.DEV ? 'draft' : 'published',
        resolve_links: 'url'
    }),
    site = settings.story.content
---
<!doctype html>
<html lang="en" class="scroll-smooth bg-surface-950">
	<Head
        title={ `${ pageTitle } | ${ site.title }` }
        description={ pageDescription || site.description }
        image={ pageThumbnail || '/og-image.webp' }
    />
	<body
        class="text-slate-700 bg-white flex min-h-svh lg:min-h-dvh flex-col"
        data-body-exit>
        <Header
            title={ site.title }
            contactActions={ site.contact_actions[0].links }
            topnavLinks={ site.topnav }
        />
		<main
            class="flex-1 swup-in pt-14 lg:pt-16"
            id="swup"
            tabindex="-1">
            <TitleHidden title={ pageTitle }/>
            <slot/>
        </main>
        <Footer
            legalName={ site.legalName }
            legalLinks={ site.legalnav }
            social={ site.social }
            actions={ site.cta }
        />
	</body>
</html>

<style is:global>
	html.is-changing .swup-in { @apply opacity-100 duration-[.4s] ease-[cubic-bezier(0,0.16,0,1)]; }
	html.is-animating .swup-in { @apply opacity-0 scale-[.9999] translate-y-3 ease-in; }
	.swup-progress-bar { @apply h-0.5 bg-punch-600 dark:bg-punch-300; }
	main:focus { outline: none; }
    button { text-align: inherit; }
	svg {
		@apply flex-shrink-0 pointer-events-none fill-current;
	}
</style>

<script>
	import Swup from 'swup'
	import Astrolog from '../scripts/astrolog'
    import { _$, _intoView, _activePath } from '../scripts/snips'

	const swup = new Swup({
		animationSelector: '[class*="swup-"]'
	})

	document.addEventListener('DOMContentLoaded', () => {
		once()
        init()
	})
	swup.hooks.on('page:view', () => init())

	function init() {
        _activePath()
        _intoView(_$('._scroll-into-view'))
	}

	function once() {
		Astrolog()
	}
</script>