---
import Section from '@layouts/Section.astro'
import Wrapper from '@layouts/Wrapper.astro'
import CardProduct from '@blocks/CardProduct.astro'
import { _padY, _padB, _empty } from '@scripts/snips'
import _slug from '@scripts/slug'
import _slugify from '@scripts/slugify'
import { _getVisibleItems } from '@scripts/get-visible-items'
import Pagination from '@blocks/Pagination.astro'
import TitleHidden from '@blocks/TitleHidden.astro'
import InputCheckboxChip from '@atoms/InputCheckboxChip.astro'
import InputButtonChip from '@atoms/InputButtonChip.astro'
import InputSearch from '@atoms/InputSearch.astro'
import Button from '@atoms/Button.astro'

const {
	paginatedProducts,
	searchQuery,
	partners,
	partnerFilter,
	partnerFilters,
	currentPage,
	totalPages,
	prevPage,
	nextPage,
} = Astro.props
---

<Section
	title={'All Products (Filtered)'}
	component={'products-filtered'}
	id='products-filtered'>
	<!-- Product Filters -->
	<Wrapper tag='form' inner class='py-8 xs:py-12' id='filter-form'>
		<TitleHidden tag='h3' title={'Filter Products by OEM Partner'} />
		<div class='flex items-center justify-center pb-5'>
			<InputSearch name='s' value={searchQuery || ''} />
		</div>
		<div class='flex flex-wrap gap-3'>
			{
				partners.map((i) => {
					const isChecked =
						partnerFilters.includes(i.id) || partnerFilter === i.id
					return (
						<InputCheckboxChip
							id={i.id}
							label={i.data.title}
							name='partner'
							value={i.id}
							checked={isChecked}
						/>
					)
				})
			}
		</div>
		<div class='flex gap-3 pt-3 w-full'>
			<InputButtonChip
				id={'apply-filters'}
				label={'Apply'}
				class='w-1/2 md:w-auto'
			/>
			<InputButtonChip
				id={'reset-filters'}
				label={'Reset'}
				class='w-1/2 md:w-auto'
			/>
		</div>
	</Wrapper>
	<Wrapper
		inner
		tag='ul'
		padB='b'
		class:list='w-full relative grid grid-cols-1 xs:grid-cols-2 md:grid-cols-3 xl:grid-cols-4 gap-3'
		data-all-products>
		<!-- Products Cards -->
		{
			paginatedProducts.length > 0 ? (
				paginatedProducts.map(({ data, resolvedPartner }, x) => (
					<li class='group'>
						<CardProduct
							filename={data.image.src}
							link={data.link?.slug || null}
							name={data.title}
							isNew={data.is_new}
							data-modal-trigger={data.is_new ? '' : null}
							data-display={
								data.is_new ? `product-at-${x}` : null
							}
							data-partner={_slugify(resolvedPartner.data.title)}
							target={data.is_new ? null : '_blank'}
						/>
					</li>
				))
			) : (
				<li>
					<p class='text-2xl text-center'>No results found</p>
				</li>
			)
		}
	</Wrapper>

	<!-- Pagination -->
	<Wrapper inner tag='nav' padB='b' aria-label='Pagination' class='flex justify-between items-center'>
		<TitleHidden tag='h3' title={'Pagination'} />
		{
			prevPage && (
				<Button
					tag='a'
					href={prevPage}
					label='Previous'
					chip
					color='chip-default'
				/>
			)
		}
		<span>Page {currentPage} of {totalPages}</span>
		{
			nextPage && (
				<Button
					tag='a'
					href={nextPage}
					label='Next'
					chip
					color='chip-default'
				/>
			)
		}
	</Wrapper>
</Section>
