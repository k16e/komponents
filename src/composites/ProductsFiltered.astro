---
import Section from '@layouts/Section.astro'
import Wrapper from '@layouts/Wrapper.astro'
import CardProduct from '@blocks/CardProduct.astro'
import { _padY, _padB, _empty } from '@scripts/snips'
import _slug from '@scripts/slug'
import _slugify from '@scripts/slugify'
import StoryblokClient from 'storyblok-js-client'
import { PERPAGE } from '@scripts/constants'
import { _getVisibleItems } from '@scripts/get-visible-items'
import Pagination from '@blocks/Pagination.astro'
import TitleHidden from '@blocks/TitleHidden.astro'

const perPage = PERPAGE
const page = Astro.url.searchParams.get('page') || '1'
const { blok } = Astro.props
const Storyblok = new StoryblokClient({
	accessToken: import.meta.env.STORYBLOK_TOKEN,
	cache: {
		clear: 'auto',
		type: 'memory',
	},
})
const params = {
	starts_with: 'products/',
	version: 'published',
	is_startpage: false,
	resolve_relations: 'product.partner',
}
const products = await Storyblok.getAll('cdn/stories', params)
const filteredProducts = products
	.filter((i) => i.content.in_stock)
	.sort((a, b) => b.content.is_new - a.content.is_new)
const search = Astro.url.searchParams.get('s')
const current = parseInt(page, 10)
const { filteredItems, visibleItems } = _getVisibleItems(
	filteredProducts,
	search,
	current,
	perPage,
)
const partners = [
	...new Set(filteredProducts.map(i => i.content.partner.name)),
]
---

<Section
	title={'All Products (Filtered)'}
	component={'products-filtered'}>
	<!-- Product Filters -->
	<Wrapper tag="nav" inner class='py-8 xs:py-12'>
		<TitleHidden tag='h3' title={'Filter Products by OEM Partner'} />
		<ul class='flex flex-wrap gap-4'>
			<li>
                All
            </li>
            {
                partners.map(i => (
                    <li>
                        { i }
                    </li>
                ))
            }
		</ul>
	</Wrapper>
	<Wrapper
		inner
		tag='ul'
		padB='b'
		class:list='w-full relative grid grid-cols-1 xs:grid-cols-2 md:grid-cols-3 xl:grid-cols-4 gap-3'
		data-all-products>
		<!-- Products Cards -->
		{
			visibleItems.length > 0 ? (
				visibleItems.map(({ content }, x) => (
					<CardProduct
						filename={content.image[0].file.filename}
						link={
							!_empty(content.link) && _slug(content.link[0].link)
						}
						name={content.name}
						isNew={content.is_new}
						data-modal-trigger={content.is_new}
						data-display={`product-at-${x}`}
						data-partner={_slugify(content.partner.name)}
					/>
				))
			) : (
				<p class='text-2xl text-center'>No results found</p>
			)
		}

		<!-- Pagination -->
		<Pagination
			total={filteredItems.length}
			size={perPage}
			current={current}
		/>
	</Wrapper>
</Section>
